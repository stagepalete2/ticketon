# Generated by Django 5.1.4 on 2024-12-19 22:40

import ckeditor.fields
import django.db.models.deletion
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type_name', models.CharField(max_length=100, verbose_name='Названия типа ивента')),
            ],
            options={
                'verbose_name': 'Тип ивента',
                'verbose_name_plural': 'Типы ивентов',
            },
        ),
        migrations.CreateModel(
            name='MetaTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Мета теги',
                'verbose_name_plural': 'Мета теги',
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_type_name', models.CharField(help_text='Например VIP, Закулисье, Фанзона и тд', max_length=150, verbose_name='Названия типа билета')),
            ],
            options={
                'verbose_name': 'Тип билета',
                'verbose_name_plural': 'Типы билетов',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_description', models.CharField(help_text='Описание нужно чтобы поисковики по типу гугла или яндекса могли искать и показывать наш сайт если ввели какой то запрос по типу названия события', max_length=500, verbose_name='Метаданные страницы - ОПИСАНИЕ')),
                ('event_name', models.CharField(max_length=100, verbose_name='Название ивента')),
                ('event_description', ckeditor.fields.RichTextField(help_text='Описание ивента. Он будет отображаться на сайте', verbose_name='Описание ивента')),
                ('event_poster', models.ImageField(help_text='Размеры постера 500px × 700px', upload_to='event/posters/', verbose_name='Постер ивента')),
                ('event_venue', models.CharField(max_length=100, verbose_name='Место проведения')),
                ('event_date', models.DateField(verbose_name='Дата проведения')),
                ('event_start_time', models.TimeField(help_text='Во сколько начнеться ивент', verbose_name='Начало')),
                ('event_duration', models.DurationField(help_text='Продолжительность ивента', verbose_name='Продолжительность')),
                ('event_age_limit', models.CharField(choices=[('6+', '6+'), ('12+', '12+'), ('16+', '16+'), ('18+', '18+'), ('21+', '21+')], max_length=3, verbose_name='Возрастное ограничение')),
                ('slug', models.SlugField(help_text='Автоматический генерируется', verbose_name='Ссылка')),
                ('meta_keywords', taggit.managers.TaggableManager(help_text='Ключевые слова нужны чтобы поисковики по типу гугла или яндекса могли искать и показывать наш сайт ишя по ключевым словам. ЧЕРЕЗ ЗАПЯТУЮ (НАПРИМЕР: Концерт, Садраддин, Новый год, ...).', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Метаданные страницы - КЛЮЧЕВЫЕ СЛОВА')),
                ('event_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.eventtype', verbose_name='Тип ивента')),
            ],
            options={
                'verbose_name': 'Ивент',
                'verbose_name_plural': 'Ивенты',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_description', models.CharField(help_text='Описание нужно чтобы поисковики по типу гугла или яндекса могли искать и показывать наш сайт если ввели какой то запрос по типу названия события', max_length=500, verbose_name='Метаданные страницы - ОПИСАНИЕ')),
                ('gallery_name', models.CharField(max_length=150, verbose_name='Названия галереи')),
                ('gallery_description', ckeditor.fields.RichTextField(verbose_name='Описание галереи')),
                ('gallery_author', models.CharField(max_length=150, verbose_name='Автор галереи')),
                ('slug', models.SlugField(help_text='Автоматический генерируется', verbose_name='Ссылка')),
                ('meta_keywords', taggit.managers.TaggableManager(help_text='Ключевые слова нужны чтобы поисковики по типу гугла или яндекса могли искать и показывать наш сайт ишя по ключевым словам. ЧЕРЕЗ ЗАПЯТУЮ (НАПРИМЕР: Концерт, Садраддин, Новый год, ...).', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Метаданные страницы - КЛЮЧЕВЫЕ СЛОВА')),
            ],
            options={
                'verbose_name': 'Галерея',
                'verbose_name_plural': 'Галереи',
            },
        ),
        migrations.CreateModel(
            name='GalleryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery_item_name', models.CharField(max_length=100, verbose_name='Название медиа')),
                ('gallery_item_image', models.ImageField(help_text='Любая медия но не все', upload_to='gallery/images/', verbose_name='Фотография')),
                ('slug', models.SlugField(help_text='Автоматический генерируется', verbose_name='Ссылка')),
                ('gallery', models.ForeignKey(help_text='Принодлежность к какому то галерее', on_delete=django.db.models.deletion.CASCADE, to='main.gallery', verbose_name='Галерея')),
            ],
            options={
                'verbose_name': 'Обьект галереи',
                'verbose_name_plural': 'Обьекты галереи',
            },
        ),
        migrations.CreateModel(
            name='MetaTagsAll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='object ID')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='main.metatags')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_description', models.CharField(help_text='Описание нужно чтобы поисковики по типу гугла или яндекса могли искать и показывать наш сайт если ввели какой то запрос по типу названия события', max_length=500, verbose_name='Метаданные страницы - ОПИСАНИЕ')),
                ('article_title', models.CharField(max_length=150, verbose_name='Названия статьи')),
                ('article_content', ckeditor.fields.RichTextField(verbose_name='Контент статьи')),
                ('article_publish', models.DateTimeField(auto_now_add=True, verbose_name='Время публикации')),
                ('article_modified', models.DateTimeField(auto_now=True, help_text='Время последнего редактирования статьи', verbose_name='Время редактирования')),
                ('article_author', models.CharField(max_length=150)),
                ('slug', models.SlugField(help_text='Автоматический генерируется', verbose_name='Ссылка')),
                ('meta_keywords', taggit.managers.TaggableManager(help_text='Ключевые слова нужны чтобы поисковики по типу гугла или яндекса могли искать и показывать наш сайт ишя по ключевым словам. ЧЕРЕЗ ЗАПЯТУЮ (НАПРИМЕР: Концерт, Садраддин, Новый год, ...).', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Метаданные страницы - КЛЮЧЕВЫЕ СЛОВА')),
                ('article_tags', taggit.managers.TaggableManager(help_text='Теги для статьи нужны чтобы сортировать, группировать, а так же для удобного поиска и фильтрации', through='main.MetaTagsAll', to='main.MetaTags', verbose_name='Теги статьи')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_name', models.CharField(max_length=150, verbose_name='Название билета')),
                ('ticket_description', ckeditor.fields.RichTextField(help_text='Опишите что входит в услуги', verbose_name='Описание билета')),
                ('ticket_price', models.IntegerField(help_text='Местная валюта (Тенге - KZT)', verbose_name='Цена билета')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.event', verbose_name='Билет Ивента')),
                ('ticket_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tickettype', verbose_name='Тип билета')),
            ],
            options={
                'verbose_name': 'Билет',
                'verbose_name_plural': 'Билеты',
            },
        ),
    ]
